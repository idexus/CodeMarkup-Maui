//
// <auto-generated> Sharp.UI.Generator.Extensions.Builder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI.Internal;
    
    public static partial class FontImageSourceExtension
    {
        public static T Color<T>(this T self,
            Microsoft.Maui.Graphics.Color color)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            self.SetValue(Microsoft.Maui.Controls.FontImageSource.ColorProperty, color);
            return self;
        }
        
        public static T Color<T>(this T self, Func<PropertyContext<Microsoft.Maui.Graphics.Color>, IPropertyBuilder<Microsoft.Maui.Graphics.Color>> configure)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            var context = new PropertyContext<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.FontImageSource.ColorProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> Color<T>(this SettersContext<T> self,
            Microsoft.Maui.Graphics.Color color)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.FontImageSource.ColorProperty, Value = color });
            return self;
        }
        
        public static SettersContext<T> Color<T>(this SettersContext<T> self, Func<PropertySettersContext<Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<Microsoft.Maui.Graphics.Color>> configure)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            var context = new PropertySettersContext<Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.FontImageSource.ColorProperty);
            configure(context).Build();
            return self;
        }
        
        public static T FontFamily<T>(this T self,
            string fontFamily)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            self.SetValue(Microsoft.Maui.Controls.FontImageSource.FontFamilyProperty, fontFamily);
            return self;
        }
        
        public static T FontFamily<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            var context = new PropertyContext<string>(self, Microsoft.Maui.Controls.FontImageSource.FontFamilyProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> FontFamily<T>(this SettersContext<T> self,
            string fontFamily)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.FontImageSource.FontFamilyProperty, Value = fontFamily });
            return self;
        }
        
        public static SettersContext<T> FontFamily<T>(this SettersContext<T> self, Func<PropertySettersContext<string>, IPropertySettersBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            var context = new PropertySettersContext<string>(self.XamlSetters, Microsoft.Maui.Controls.FontImageSource.FontFamilyProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Glyph<T>(this T self,
            string glyph)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            self.SetValue(Microsoft.Maui.Controls.FontImageSource.GlyphProperty, glyph);
            return self;
        }
        
        public static T Glyph<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            var context = new PropertyContext<string>(self, Microsoft.Maui.Controls.FontImageSource.GlyphProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> Glyph<T>(this SettersContext<T> self,
            string glyph)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.FontImageSource.GlyphProperty, Value = glyph });
            return self;
        }
        
        public static SettersContext<T> Glyph<T>(this SettersContext<T> self, Func<PropertySettersContext<string>, IPropertySettersBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            var context = new PropertySettersContext<string>(self.XamlSetters, Microsoft.Maui.Controls.FontImageSource.GlyphProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Size<T>(this T self,
            double size)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            self.SetValue(Microsoft.Maui.Controls.FontImageSource.SizeProperty, size);
            return self;
        }
        
        public static T Size<T>(this T self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.FontImageSource.SizeProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> Size<T>(this SettersContext<T> self,
            double size)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.FontImageSource.SizeProperty, Value = size });
            return self;
        }
        
        public static SettersContext<T> Size<T>(this SettersContext<T> self, Func<PropertySettersContext<double>, IPropertySettersBuilder<double>> configure)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            var context = new PropertySettersContext<double>(self.XamlSetters, Microsoft.Maui.Controls.FontImageSource.SizeProperty);
            configure(context).Build();
            return self;
        }
        
        public static T FontAutoScalingEnabled<T>(this T self,
            bool fontAutoScalingEnabled)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            self.SetValue(Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabledProperty, fontAutoScalingEnabled);
            return self;
        }
        
        public static T FontAutoScalingEnabled<T>(this T self, Func<PropertyContext<bool>, IPropertyBuilder<bool>> configure)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            var context = new PropertyContext<bool>(self, Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabledProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> FontAutoScalingEnabled<T>(this SettersContext<T> self,
            bool fontAutoScalingEnabled)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabledProperty, Value = fontAutoScalingEnabled });
            return self;
        }
        
        public static SettersContext<T> FontAutoScalingEnabled<T>(this SettersContext<T> self, Func<PropertySettersContext<bool>, IPropertySettersBuilder<bool>> configure)
            where T : Microsoft.Maui.Controls.FontImageSource
        {
            var context = new PropertySettersContext<bool>(self.XamlSetters, Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabledProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
