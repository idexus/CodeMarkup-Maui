//
// <auto-generated> Sharp.UI.Generator.Extensions.Builder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI.Internal;
    
    public static partial class HtmlWebViewSourceExtension
    {
        public static T BaseUrl<T>(this T self,
            string baseUrl)
            where T : Microsoft.Maui.Controls.HtmlWebViewSource
        {
            self.SetValue(Microsoft.Maui.Controls.HtmlWebViewSource.BaseUrlProperty, baseUrl);
            return self;
        }
        
        public static T BaseUrl<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.HtmlWebViewSource
        {
            var context = new PropertyContext<string>(self, Microsoft.Maui.Controls.HtmlWebViewSource.BaseUrlProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> BaseUrl<T>(this SettersContext<T> self,
            string baseUrl)
            where T : Microsoft.Maui.Controls.HtmlWebViewSource
        {
            self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.HtmlWebViewSource.BaseUrlProperty, Value = baseUrl });
            return self;
        }
        
        public static SettersContext<T> BaseUrl<T>(this SettersContext<T> self, Func<PropertySettersContext<string>, IPropertySettersBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.HtmlWebViewSource
        {
            var context = new PropertySettersContext<string>(self.XamlSetters, Microsoft.Maui.Controls.HtmlWebViewSource.BaseUrlProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Html<T>(this T self,
            string html)
            where T : Microsoft.Maui.Controls.HtmlWebViewSource
        {
            self.SetValue(Microsoft.Maui.Controls.HtmlWebViewSource.HtmlProperty, html);
            return self;
        }
        
        public static T Html<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.HtmlWebViewSource
        {
            var context = new PropertyContext<string>(self, Microsoft.Maui.Controls.HtmlWebViewSource.HtmlProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> Html<T>(this SettersContext<T> self,
            string html)
            where T : Microsoft.Maui.Controls.HtmlWebViewSource
        {
            self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.HtmlWebViewSource.HtmlProperty, Value = html });
            return self;
        }
        
        public static SettersContext<T> Html<T>(this SettersContext<T> self, Func<PropertySettersContext<string>, IPropertySettersBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.HtmlWebViewSource
        {
            var context = new PropertySettersContext<string>(self.XamlSetters, Microsoft.Maui.Controls.HtmlWebViewSource.HtmlProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
