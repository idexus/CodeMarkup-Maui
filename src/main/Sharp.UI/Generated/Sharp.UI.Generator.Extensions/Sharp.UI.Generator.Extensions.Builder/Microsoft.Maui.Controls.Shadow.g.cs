//
// <auto-generated> Sharp.UI.Generator.Extensions.Builder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI.Internal;
    
    public static partial class ShadowExtension
    {
        public static T Radius<T>(this T self,
            float radius)
            where T : Microsoft.Maui.Controls.Shadow
        {
            self.SetValue(Microsoft.Maui.Controls.Shadow.RadiusProperty, radius);
            return self;
        }
        
        public static T Radius<T>(this T self, Func<PropertyContext<float>, IPropertyBuilder<float>> configure)
            where T : Microsoft.Maui.Controls.Shadow
        {
            var context = new PropertyContext<float>(self, Microsoft.Maui.Controls.Shadow.RadiusProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> Radius<T>(this SettersContext<T> self,
            float radius)
            where T : Microsoft.Maui.Controls.Shadow
        {
            self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Shadow.RadiusProperty, Value = radius });
            return self;
        }
        
        public static SettersContext<T> Radius<T>(this SettersContext<T> self, Func<PropertySettersContext<float>, IPropertySettersBuilder<float>> configure)
            where T : Microsoft.Maui.Controls.Shadow
        {
            var context = new PropertySettersContext<float>(self.XamlSetters, Microsoft.Maui.Controls.Shadow.RadiusProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Opacity<T>(this T self,
            float opacity)
            where T : Microsoft.Maui.Controls.Shadow
        {
            self.SetValue(Microsoft.Maui.Controls.Shadow.OpacityProperty, opacity);
            return self;
        }
        
        public static T Opacity<T>(this T self, Func<PropertyContext<float>, IPropertyBuilder<float>> configure)
            where T : Microsoft.Maui.Controls.Shadow
        {
            var context = new PropertyContext<float>(self, Microsoft.Maui.Controls.Shadow.OpacityProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> Opacity<T>(this SettersContext<T> self,
            float opacity)
            where T : Microsoft.Maui.Controls.Shadow
        {
            self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Shadow.OpacityProperty, Value = opacity });
            return self;
        }
        
        public static SettersContext<T> Opacity<T>(this SettersContext<T> self, Func<PropertySettersContext<float>, IPropertySettersBuilder<float>> configure)
            where T : Microsoft.Maui.Controls.Shadow
        {
            var context = new PropertySettersContext<float>(self.XamlSetters, Microsoft.Maui.Controls.Shadow.OpacityProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Brush<T>(this T self,
            Microsoft.Maui.Controls.Brush brush)
            where T : Microsoft.Maui.Controls.Shadow
        {
            self.SetValue(Microsoft.Maui.Controls.Shadow.BrushProperty, brush);
            return self;
        }
        
        public static T Brush<T>(this T self, Func<PropertyContext<Microsoft.Maui.Controls.Brush>, IPropertyBuilder<Microsoft.Maui.Controls.Brush>> configure)
            where T : Microsoft.Maui.Controls.Shadow
        {
            var context = new PropertyContext<Microsoft.Maui.Controls.Brush>(self, Microsoft.Maui.Controls.Shadow.BrushProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> Brush<T>(this SettersContext<T> self,
            Microsoft.Maui.Controls.Brush brush)
            where T : Microsoft.Maui.Controls.Shadow
        {
            self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Shadow.BrushProperty, Value = brush });
            return self;
        }
        
        public static SettersContext<T> Brush<T>(this SettersContext<T> self, Func<PropertySettersContext<Microsoft.Maui.Controls.Brush>, IPropertySettersBuilder<Microsoft.Maui.Controls.Brush>> configure)
            where T : Microsoft.Maui.Controls.Shadow
        {
            var context = new PropertySettersContext<Microsoft.Maui.Controls.Brush>(self.XamlSetters, Microsoft.Maui.Controls.Shadow.BrushProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Offset<T>(this T self,
            Microsoft.Maui.Graphics.Point offset)
            where T : Microsoft.Maui.Controls.Shadow
        {
            self.SetValue(Microsoft.Maui.Controls.Shadow.OffsetProperty, offset);
            return self;
        }
        
        public static T Offset<T>(this T self, Func<PropertyContext<Microsoft.Maui.Graphics.Point>, IPropertyBuilder<Microsoft.Maui.Graphics.Point>> configure)
            where T : Microsoft.Maui.Controls.Shadow
        {
            var context = new PropertyContext<Microsoft.Maui.Graphics.Point>(self, Microsoft.Maui.Controls.Shadow.OffsetProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> Offset<T>(this SettersContext<T> self,
            Microsoft.Maui.Graphics.Point offset)
            where T : Microsoft.Maui.Controls.Shadow
        {
            self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Shadow.OffsetProperty, Value = offset });
            return self;
        }
        
        public static SettersContext<T> Offset<T>(this SettersContext<T> self, Func<PropertySettersContext<Microsoft.Maui.Graphics.Point>, IPropertySettersBuilder<Microsoft.Maui.Graphics.Point>> configure)
            where T : Microsoft.Maui.Controls.Shadow
        {
            var context = new PropertySettersContext<Microsoft.Maui.Graphics.Point>(self.XamlSetters, Microsoft.Maui.Controls.Shadow.OffsetProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
