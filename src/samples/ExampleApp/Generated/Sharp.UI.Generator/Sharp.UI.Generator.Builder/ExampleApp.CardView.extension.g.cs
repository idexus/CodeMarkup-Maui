//
// <auto-generated> Sharp.UI.Generator.Extensions.Builder
//

#nullable enable
#pragma warning disable CS8601


namespace ExampleApp
{
    using Sharp.UI.Internal;
    using Sharp.UI;
    
    public static partial class CardViewExtension
    {
        public static T OnClicked<T>(this T self, System.EventHandler handler)
            where T : ExampleApp.CardView
        {
            self.Clicked += handler;
            return self;
        }
        
        public static T OnClicked<T>(this T self, System.Action<T> action)
            where T : ExampleApp.CardView
        {
            self.Clicked += (o, arg) => action(self);
            return self;
        }
        
        public static T CardTitle<T>(this T self,
            string cardTitle)
            where T : ExampleApp.CardView
        {
            self.SetValue(ExampleApp.CardView.CardTitleProperty, cardTitle);
            return self;
        }
        
        public static T CardTitle<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertyContext<string>(self, ExampleApp.CardView.CardTitleProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> CardTitle<T>(this SettersContext<T> self,
            string cardTitle)
            where T : ExampleApp.CardView
        {
            self.XamlSetters.Add(new Setter { Property = ExampleApp.CardView.CardTitleProperty, Value = cardTitle });
            return self;
        }
        
        public static SettersContext<T> CardTitle<T>(this SettersContext<T> self, Func<PropertySettersContext<string>, IPropertySettersBuilder<string>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertySettersContext<string>(self.XamlSetters, ExampleApp.CardView.CardTitleProperty);
            configure(context).Build();
            return self;
        }
        
        public static T CardDescription<T>(this T self,
            string cardDescription)
            where T : ExampleApp.CardView
        {
            self.SetValue(ExampleApp.CardView.CardDescriptionProperty, cardDescription);
            return self;
        }
        
        public static T CardDescription<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertyContext<string>(self, ExampleApp.CardView.CardDescriptionProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> CardDescription<T>(this SettersContext<T> self,
            string cardDescription)
            where T : ExampleApp.CardView
        {
            self.XamlSetters.Add(new Setter { Property = ExampleApp.CardView.CardDescriptionProperty, Value = cardDescription });
            return self;
        }
        
        public static SettersContext<T> CardDescription<T>(this SettersContext<T> self, Func<PropertySettersContext<string>, IPropertySettersBuilder<string>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertySettersContext<string>(self.XamlSetters, ExampleApp.CardView.CardDescriptionProperty);
            configure(context).Build();
            return self;
        }
        
        public static T CardColor<T>(this T self,
            Microsoft.Maui.Graphics.Color cardColor)
            where T : ExampleApp.CardView
        {
            self.SetValue(ExampleApp.CardView.CardColorProperty, cardColor);
            return self;
        }
        
        public static T CardColor<T>(this T self, Func<PropertyContext<Microsoft.Maui.Graphics.Color>, IPropertyBuilder<Microsoft.Maui.Graphics.Color>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertyContext<Microsoft.Maui.Graphics.Color>(self, ExampleApp.CardView.CardColorProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> CardColor<T>(this SettersContext<T> self,
            Microsoft.Maui.Graphics.Color cardColor)
            where T : ExampleApp.CardView
        {
            self.XamlSetters.Add(new Setter { Property = ExampleApp.CardView.CardColorProperty, Value = cardColor });
            return self;
        }
        
        public static SettersContext<T> CardColor<T>(this SettersContext<T> self, Func<PropertySettersContext<Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<Microsoft.Maui.Graphics.Color>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertySettersContext<Microsoft.Maui.Graphics.Color>(self.XamlSetters, ExampleApp.CardView.CardColorProperty);
            configure(context).Build();
            return self;
        }
        
        public static T BorderColor<T>(this T self,
            Microsoft.Maui.Graphics.Color borderColor)
            where T : ExampleApp.CardView
        {
            self.SetValue(ExampleApp.CardView.BorderColorProperty, borderColor);
            return self;
        }
        
        public static T BorderColor<T>(this T self, Func<PropertyContext<Microsoft.Maui.Graphics.Color>, IPropertyBuilder<Microsoft.Maui.Graphics.Color>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertyContext<Microsoft.Maui.Graphics.Color>(self, ExampleApp.CardView.BorderColorProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> BorderColor<T>(this SettersContext<T> self,
            Microsoft.Maui.Graphics.Color borderColor)
            where T : ExampleApp.CardView
        {
            self.XamlSetters.Add(new Setter { Property = ExampleApp.CardView.BorderColorProperty, Value = borderColor });
            return self;
        }
        
        public static SettersContext<T> BorderColor<T>(this SettersContext<T> self, Func<PropertySettersContext<Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<Microsoft.Maui.Graphics.Color>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertySettersContext<Microsoft.Maui.Graphics.Color>(self.XamlSetters, ExampleApp.CardView.BorderColorProperty);
            configure(context).Build();
            return self;
        }
        
        public static T DescriptionStyle<T>(this T self,
            Microsoft.Maui.Controls.Style descriptionStyle)
            where T : ExampleApp.CardView
        {
            self.SetValue(ExampleApp.CardView.DescriptionStyleProperty, descriptionStyle);
            return self;
        }
        
        public static T DescriptionStyle<T>(this T self, Func<PropertyContext<Microsoft.Maui.Controls.Style>, IPropertyBuilder<Microsoft.Maui.Controls.Style>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertyContext<Microsoft.Maui.Controls.Style>(self, ExampleApp.CardView.DescriptionStyleProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> DescriptionStyle<T>(this SettersContext<T> self,
            Microsoft.Maui.Controls.Style descriptionStyle)
            where T : ExampleApp.CardView
        {
            self.XamlSetters.Add(new Setter { Property = ExampleApp.CardView.DescriptionStyleProperty, Value = descriptionStyle });
            return self;
        }
        
        public static SettersContext<T> DescriptionStyle<T>(this SettersContext<T> self, Func<PropertySettersContext<Microsoft.Maui.Controls.Style>, IPropertySettersBuilder<Microsoft.Maui.Controls.Style>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertySettersContext<Microsoft.Maui.Controls.Style>(self.XamlSetters, ExampleApp.CardView.DescriptionStyleProperty);
            configure(context).Build();
            return self;
        }
        
        public static T ContentView<T>(this T self,
            Microsoft.Maui.Controls.View contentView)
            where T : ExampleApp.CardView
        {
            self.SetValue(ExampleApp.CardView.ContentViewProperty, contentView);
            return self;
        }
        
        public static T ContentView<T>(this T self, Func<PropertyContext<Microsoft.Maui.Controls.View>, IPropertyBuilder<Microsoft.Maui.Controls.View>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertyContext<Microsoft.Maui.Controls.View>(self, ExampleApp.CardView.ContentViewProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> ContentView<T>(this SettersContext<T> self,
            Microsoft.Maui.Controls.View contentView)
            where T : ExampleApp.CardView
        {
            self.XamlSetters.Add(new Setter { Property = ExampleApp.CardView.ContentViewProperty, Value = contentView });
            return self;
        }
        
        public static SettersContext<T> ContentView<T>(this SettersContext<T> self, Func<PropertySettersContext<Microsoft.Maui.Controls.View>, IPropertySettersBuilder<Microsoft.Maui.Controls.View>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertySettersContext<Microsoft.Maui.Controls.View>(self.XamlSetters, ExampleApp.CardView.ContentViewProperty);
            configure(context).Build();
            return self;
        }
        
        public static T ButtonTitle<T>(this T self,
            string buttonTitle)
            where T : ExampleApp.CardView
        {
            self.SetValue(ExampleApp.CardView.ButtonTitleProperty, buttonTitle);
            return self;
        }
        
        public static T ButtonTitle<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertyContext<string>(self, ExampleApp.CardView.ButtonTitleProperty);
            configure(context).Build();
            return self;
        }
        
        public static SettersContext<T> ButtonTitle<T>(this SettersContext<T> self,
            string buttonTitle)
            where T : ExampleApp.CardView
        {
            self.XamlSetters.Add(new Setter { Property = ExampleApp.CardView.ButtonTitleProperty, Value = buttonTitle });
            return self;
        }
        
        public static SettersContext<T> ButtonTitle<T>(this SettersContext<T> self, Func<PropertySettersContext<string>, IPropertySettersBuilder<string>> configure)
            where T : ExampleApp.CardView
        {
            var context = new PropertySettersContext<string>(self.XamlSetters, ExampleApp.CardView.ButtonTitleProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
